const trElementTemplate = `
<tr class="bid-row">
	<td scope="row">
		<a href="view-and-edit.html?id=%ID%">–ó–∞—è–≤–∫–∞ ‚Ññ%ID%</a>
	</td>
	<td>%CLIENT_NAME%</td>
	<td>
		<span class="badge badge-light badge-lg">
			<span class="icon">üõ¥</span> %GOOD%
		</span>
	</td>
	<td>%PRICE%</td>
	<td><span class="badge badge-primary">–ù–æ–≤–∞—è</span></td>
	<td><span class="badge badge-secondary">–ù–µ—Ç –æ–ø–ª–∞—Ç—ã</span></td>
</tr>`

main()

function main () {
	const url = 'http://localhost:3000'
	const key = '?key=testtesttest'
	const address = '/orders'

	const newOrder = JSON.stringify({
		good: "–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞",
		price: 12500,
		clientName: "–î–º–∏—Ç—Ä–∏–π",
		managerName: "–ê–Ω–∞—Å—Ç–∞—Å–∏—è",
		paymentStatus: 0,
		requestStatus: 0
	})

	fetch(url + address + key, {
		method: 'GET',
		// body: newOrder
	})
		.then(answer => answer.json())
		.then(data => {
			const rootDir = document.getElementById('listViewer')

			for (const item of data) {
				const tbodyElement = document.createElement('tbody')

				tbodyElement.innerHTML = trElementTemplate
					.replace('%ID%', item.id)
					.replace('%ID%', item.id)
					.replace('%GOOD%', item.good)
					.replace('%PRICE%', priceNormalize(item.price))
					.replace('%CLIENT_NAME%', item.clientName)

				rootDir.append(tbodyElement.firstElementChild)
			}

			console.log(data)
		})
}

function priceNormalize (price) {
	const fractional = (price % 100).toString().padStart(2, '0')
	const integer = parseInt(price / 100)

	return `${integer}.${fractional} —Ä—É–±.`
}

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã
// GET /orders

// –ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ –ø–æ ID
// GET /order/:id

// –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑
// POST /order body

// –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑
// PUT /order/:id body

// –£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑
// DELETE /order/:id

// –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
// POST /reinit